{"version":3,"sources":["images/shell32_264.ico","images/Chrome-icon.png","images/imageres_5367.ico","images/cmd-icon.ico","images/note-icon.ico","images/more-settings.svg","images/star-favourite.png","components/programs/Folder/Folder.js","components/programs/Cmd/Cmd.js","components/programs/Notepad/Notepad.js","components/general-components/taskbar/Taskbar.js","components/programs/Browser/Browser.js","components/general-components/start-modal/Start-modal.js","components/Windows.js","serviceWorker.js","index.js"],"names":["module","exports","Folder","props","state","dirtyminiaturesActive","snake3dActive","minWidth","minHeight","x","y","isfullscreen","clicks","handleFullScreenClick","bind","this","setState","normalize","maximize","e","persist","preventDefault","push","Date","getTime","window","clearTimeout","timeout","setTimeout","length","openShortcut","setFolderIconActive","shortcutOpened","name","maximizeBtn","id","onMouseDown","active","default","width","height","cancel","className","src","FolderIco","FolderPropertiesIco","onClick","minimize","exit","version","viewBox","d","clickHandler","chromeIcon","React","Component","Cmd","Notepad","stateChange","console","log","Taskbar","componentDidMount","getClockTime","intervalId","setInterval","componentWillUnmount","clearInterval","setActive","program","activeProgram","clock","toTimeString","slice","fill","OpenPrograms","map","key","taskbarItemClicked","ActiveProgram","Browser","closeTab","pageName","listOfOpenWebsites","remainingTabs","filter","newName","activeTab","listOfWebsites","url","openedPage","page","toLowerCase","some","iframeUrl","event","stopPropagation","openNewPage","browserIco","starFavourite","moreSettings","title","StartModal","clicked","closeModal","Windows","openAppFromIcon","programNode","ReactDOM","findDOMNode","querySelector","style","display","list","setActiveWindow","opacity","openAppFromTaskbar","node","taskbarNodes","querySelectorAll","classList","contains","coordsItem","getCoords","Promise","resolve","reject","transform","then","transition","minimizeAppFromToolbar","closeAppFromToolbar","idx","indexOf","splice","taskbarCoords","getBoundingClientRect","programwindow","currentTransformFromDraggable","match","draggableY","draggableX","setCoords","destinationY","destinationX","parseInt","maximizeAppFromToolbar","add","undoMaximizeAppFromToolbar","remove","AllPrograms","prog","taskbar","current","openApp","shortcut","browser","cmdActive","cmdFullScreen","biosClick","listOfProgramCoords","createRef","render","find","foundIndex","findIndex","tabIndex","cmdIcon","noteIcon","folderIcon","ref","Boolean","location","hostname","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95cfa09b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shell32_264.bdc4ab6b.ico\";","module.exports = __webpack_public_path__ + \"static/media/Chrome-icon.86f49ad5.png\";","module.exports = __webpack_public_path__ + \"static/media/imageres_5367.f81d3bf5.ico\";","module.exports = __webpack_public_path__ + \"static/media/cmd-icon.dedf478d.ico\";","module.exports = __webpack_public_path__ + \"static/media/note-icon.b98de453.ico\";","module.exports = __webpack_public_path__ + \"static/media/more-settings.f8059619.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-favourite.3a08388a.png\";","import React from \"react\";\r\nimport \"./Folder.css\";\r\nimport { Rnd } from \"react-rnd\";\r\nimport FolderIco from \"../../../images/shell32_264.ico\";\r\nimport FolderPropertiesIco from \"../../../images/imageres_5367.ico\";\r\nimport chromeIcon from \"../../../images/Chrome-icon.png\";\r\n\r\nclass Folder extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dirtyminiaturesActive: false,\r\n      snake3dActive: false,\r\n      minWidth: 600,\r\n      minHeight: 400,\r\n      x: 10,\r\n      y: 10,\r\n      isfullscreen: false\r\n    };\r\n    this.clicks = [];\r\n    this.handleFullScreenClick = this.handleFullScreenClick.bind(this);\r\n  }\r\n  handleFullScreenClick() {\r\n    if (this.state.isfullscreen) {\r\n      this.setState({ isfullscreen: false });\r\n      this.props.normalize(\"#folder\");\r\n    } else {\r\n      this.props.maximize(\"#folder\");\r\n      this.setState({ isfullscreen: true });\r\n    }\r\n  }\r\n\r\n  //Single or Double click navigator\r\n  clickHandler(state, e) {\r\n    e.persist();\r\n    e.preventDefault();\r\n    this.clicks.push(new Date().getTime());\r\n    window.clearTimeout(this.timeout);\r\n    this.timeout = window.setTimeout(() => {\r\n      if (\r\n        this.clicks.length > 1 &&\r\n        this.clicks[this.clicks.length - 1] -\r\n          this.clicks[this.clicks.length - 2] <\r\n          300\r\n      ) {\r\n        this.openShortcut(state);\r\n      }\r\n    }, 300);\r\n    this.setFolderIconActive(state);\r\n  }\r\n  openShortcut(state) {\r\n    this.props.shortcutOpened(state);\r\n  }\r\n  setFolderIconActive(name) {\r\n    this.setState({\r\n      snake3dActive: false,\r\n      dirtyminiaturesActive: false\r\n    });\r\n    if (name == \"dirtyminiatures\") {\r\n      this.setState({ dirtyminiaturesActive: true });\r\n    } else if (name == \"snake3d\") {\r\n      this.setState({ snake3dActive: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var maximizeBtn = this.state.isfullscreen ? \"❐\" : \"☐\";\r\n    return (\r\n      <Rnd\r\n        id=\"folder\"\r\n        minHeight=\"100\"\r\n        minWidth=\"580\"\r\n        onMouseDown={() => this.props.active(\".folder-exe\")}\r\n        default={{\r\n          x: 25,\r\n          y: 66,\r\n          width: 700,\r\n          height: 400\r\n        }}\r\n        cancel=\".not-draggable\"\r\n      >\r\n        <div\r\n          className={\r\n            !this.state.isfullscreen\r\n              ? \"folder-toolbar\"\r\n              : \"folder-toolbar not-draggable\"\r\n          }\r\n        >\r\n          <div className=\"folder-toolbar-left-btns\">\r\n            <img src={FolderIco}></img>\r\n            <div className=\"folder-toolbar-divider\"></div>\r\n            <img src={FolderPropertiesIco}></img>\r\n            <img src={FolderIco}></img>\r\n            <div className=\"folder-toolbar-divider\"></div>\r\n          </div>\r\n          <div className=\"folder-toolbar-title\">My Projects</div>\r\n\r\n          <div className=\"toolbar-btn-collection not-draggable\">\r\n            <button\r\n              className=\"folder-toolbar-btn minimize-btn\"\r\n              onClick={() => this.props.minimize(\".folder-exe\")}\r\n            >\r\n              &#8213;\r\n            </button>\r\n            <button\r\n              className=\"folder-toolbar-btn maximize-btn\"\r\n              onClick={this.handleFullScreenClick}\r\n            >\r\n              {maximizeBtn}\r\n            </button>\r\n            <button\r\n              className=\"folder-toolbar-btn close-btn\"\r\n              onClick={() => this.props.exit(\".folder-exe\")}\r\n            >\r\n              &#10005;\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"folder-btn-row not-draggable\">\r\n          <span>File</span>\r\n          <span>Edit</span>\r\n          <span>Format</span>\r\n          <span>View</span>\r\n          <span>Help</span>\r\n        </div>\r\n        <div className=\"folder-navigation-bar  not-draggable\">\r\n          <div className=\"arrow-btn-container\">\r\n            <div>\r\n              <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                viewBox=\"0 0 492 492\"\r\n              >\r\n                <g>\r\n                  <g>\r\n                    <path d=\"M464.344,207.418l0.768,0.168H135.888l103.496-103.724c5.068-5.064,7.848-11.924,7.848-19.124    c0-7.2-2.78-14.012-7.848-19.088L223.28,49.538c-5.064-5.064-11.812-7.864-19.008-7.864c-7.2,0-13.952,2.78-19.016,7.844    L7.844,226.914C2.76,231.998-0.02,238.77,0,245.974c-0.02,7.244,2.76,14.02,7.844,19.096l177.412,177.412    c5.064,5.06,11.812,7.844,19.016,7.844c7.196,0,13.944-2.788,19.008-7.844l16.104-16.112c5.068-5.056,7.848-11.808,7.848-19.008    c0-7.196-2.78-13.592-7.848-18.652L134.72,284.406h329.992c14.828,0,27.288-12.78,27.288-27.6v-22.788    C492,219.198,479.172,207.418,464.344,207.418z\" />\r\n                  </g>\r\n                </g>\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                viewBox=\"0 0 492.004 492.004\"\r\n              >\r\n                <g>\r\n                  <g>\r\n                    <path d=\"M484.14,226.886L306.46,49.202c-5.072-5.072-11.832-7.856-19.04-7.856c-7.216,0-13.972,2.788-19.044,7.856l-16.132,16.136    c-5.068,5.064-7.86,11.828-7.86,19.04c0,7.208,2.792,14.2,7.86,19.264L355.9,207.526H26.58C11.732,207.526,0,219.15,0,234.002    v22.812c0,14.852,11.732,27.648,26.58,27.648h330.496L252.248,388.926c-5.068,5.072-7.86,11.652-7.86,18.864    c0,7.204,2.792,13.88,7.86,18.948l16.132,16.084c5.072,5.072,11.828,7.836,19.044,7.836c7.208,0,13.968-2.8,19.04-7.872    l177.68-177.68c5.084-5.088,7.88-11.88,7.86-19.1C492.02,238.762,489.228,231.966,484.14,226.886z\" />\r\n                  </g>\r\n                </g>\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <svg\r\n                version=\"1.1\"\r\n                id=\"Capa_1\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                viewBox=\"0 0 444.819 444.819\"\r\n              >\r\n                <g>\r\n                  <path d=\"M434.252,114.203l-21.409-21.416c-7.419-7.04-16.084-10.561-25.975-10.561c-10.095,0-18.657,3.521-25.7,10.561   L222.41,231.549L83.653,92.791c-7.042-7.04-15.606-10.561-25.697-10.561c-9.896,0-18.559,3.521-25.979,10.561l-21.128,21.416   C3.615,121.436,0,130.099,0,140.188c0,10.277,3.619,18.842,10.848,25.693l185.864,185.865c6.855,7.23,15.416,10.848,25.697,10.848   c10.088,0,18.75-3.617,25.977-10.848l185.865-185.865c7.043-7.044,10.567-15.608,10.567-25.693   C444.819,130.287,441.295,121.629,434.252,114.203z\" />\r\n                </g>\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                viewBox=\"0 0 492 492\"\r\n              >\r\n                <g>\r\n                  <g>\r\n                    <path d=\"M442.627,185.388L265.083,7.844C260.019,2.78,253.263,0,245.915,0c-7.204,0-13.956,2.78-19.02,7.844L49.347,185.388    c-10.488,10.492-10.488,27.568,0,38.052l16.12,16.128c5.064,5.06,11.82,7.844,19.028,7.844c7.204,0,14.192-2.784,19.252-7.844    l103.808-103.584v329.084c0,14.832,11.616,26.932,26.448,26.932h22.8c14.832,0,27.624-12.1,27.624-26.932V134.816l104.396,104.752    c5.06,5.06,11.636,7.844,18.844,7.844s13.864-2.784,18.932-7.844l16.072-16.128C453.163,212.952,453.123,195.88,442.627,185.388z\" />\r\n                  </g>\r\n                </g>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div className=\"folder-bread-crums\">\r\n            <div>\r\n              <div className=\"folder-bread-crums-crums\">\r\n                <div>\r\n                  {\" \"}\r\n                  <img src={FolderIco}></img>\r\n                </div>\r\n                <div>&#xAB;</div>\r\n                <div>user</div>\r\n                <div>\r\n                  <svg viewBox=\"0 0 50 50\" version=\"1.1\">\r\n                    <path d=\"M 18.136719 3 C 17.875 3.003906 17.628906 3.105469 17.441406 3.289063 L 11.417969 9.265625 C 11.027344 9.65625 11.023438 10.289063 11.410156 10.679688 L 25.644531 25.03125 L 11.296875 39.265625 C 10.902344 39.65625 10.898438 40.289063 11.289063 40.679688 L 17.265625 46.703125 C 17.65625 47.097656 18.289063 47.101563 18.679688 46.710938 L 39.765625 25.796875 C 40.15625 25.40625 40.160156 24.773438 39.769531 24.378906 L 18.859375 3.296875 C 18.667969 3.101563 18.40625 2.996094 18.136719 3 Z \"></path>\r\n                  </svg>\r\n                </div>\r\n                <div>src</div>\r\n                <div>\r\n                  <svg viewBox=\"0 0 50 50\" version=\"1.1\">\r\n                    <path d=\"M 18.136719 3 C 17.875 3.003906 17.628906 3.105469 17.441406 3.289063 L 11.417969 9.265625 C 11.027344 9.65625 11.023438 10.289063 11.410156 10.679688 L 25.644531 25.03125 L 11.296875 39.265625 C 10.902344 39.65625 10.898438 40.289063 11.289063 40.679688 L 17.265625 46.703125 C 17.65625 47.097656 18.289063 47.101563 18.679688 46.710938 L 39.765625 25.796875 C 40.15625 25.40625 40.160156 24.773438 39.769531 24.378906 L 18.859375 3.296875 C 18.667969 3.101563 18.40625 2.996094 18.136719 3 Z \"></path>\r\n                  </svg>\r\n                </div>\r\n                <div>My Projects</div>\r\n              </div>\r\n              <div className=\"folder-bread-crums-right-btns\">\r\n                <div>\r\n                  <svg\r\n                    version=\"1.1\"\r\n                    id=\"Capa_1\"\r\n                    x=\"0px\"\r\n                    y=\"0px\"\r\n                    viewBox=\"0 0 444.819 444.819\"\r\n                  >\r\n                    <g>\r\n                      <path d=\"M434.252,114.203l-21.409-21.416c-7.419-7.04-16.084-10.561-25.975-10.561c-10.095,0-18.657,3.521-25.7,10.561   L222.41,231.549L83.653,92.791c-7.042-7.04-15.606-10.561-25.697-10.561c-9.896,0-18.559,3.521-25.979,10.561l-21.128,21.416   C3.615,121.436,0,130.099,0,140.188c0,10.277,3.619,18.842,10.848,25.693l185.864,185.865c6.855,7.23,15.416,10.848,25.697,10.848   c10.088,0,18.75-3.617,25.977-10.848l185.865-185.865c7.043-7.044,10.567-15.608,10.567-25.693   C444.819,130.287,441.295,121.629,434.252,114.203z\" />\r\n                    </g>\r\n                  </svg>\r\n                </div>\r\n                <div>\r\n                  <svg viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                    <path d=\"M 20 12 C 20 16.417969 16.417969 20 12 20 C 7.582031 20 4 16.417969 4 12 C 4 7.582031 7.582031 4 12 4 C 13.113281 4 14.167969 4.238281 15.132813 4.648438 L 12.628906 7.324219 L 20.121094 7.074219 L 19.484375 0 L 17.273438 2.359375 C 15.710938 1.5 13.914063 1 12 1 C 5.925781 1 1 5.925781 1 12 C 1 18.074219 5.925781 23 12 23 C 18.074219 23 23 18.074219 23 12 Z \"></path>\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"folder-search-box\">\r\n            <span>Seach My Projects</span>\r\n            <span>\r\n              <svg viewBox=\"0 0 16 16\" version=\"1.1\">\r\n                <path d=\"M 10.5 1 C 8.019531 1 6 3.019531 6 5.5 C 6 6.558594 6.382813 7.523438 7 8.292969 L 2.023438 13.269531 L 2.726563 13.980469 L 7.707031 9 C 8.476563 9.617188 9.441406 10 10.5 10 C 12.980469 10 15 7.980469 15 5.5 C 15 3.019531 12.980469 1 10.5 1 Z M 10.5 2 C 12.4375 2 14 3.5625 14 5.5 C 14 7.4375 12.4375 9 10.5 9 C 8.5625 9 7 7.4375 7 5.5 C 7 3.5625 8.5625 2 10.5 2 Z \" />\r\n              </svg>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"folder-content-window not-draggable\">\r\n          <div className=\"folder-content-shortcuts\">\r\n            <div\r\n              onClick={e => this.clickHandler(\"dirtyminiatures\", e)}\r\n              className={\r\n                this.state.dirtyminiaturesActive ? \"folder-icon-active\" : \"\"\r\n              }\r\n            >\r\n              <img src={chromeIcon}></img>\r\n              <span>Dirtyminiatures.html</span>\r\n            </div>\r\n            <div\r\n              onClick={e => this.clickHandler(\"snake3d\", e)}\r\n              className={this.state.snake3dActive ? \"folder-icon-active\" : \"\"}\r\n            >\r\n              <img src={chromeIcon}></img>\r\n              <span>Snake3d.html</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Rnd>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Folder;\r\n","import React from \"react\";\r\nimport \"./Cmd.css\";\r\nimport { Rnd } from \"react-rnd\";\r\n\r\nclass Cmd extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      minWidth: 600,\r\n      minHeight: 400,\r\n      x: 10,\r\n      y: 10, isfullscreen: false\r\n    };\r\n    this.handleFullScreenClick = this.handleFullScreenClick.bind(this);\r\n  }\r\n  handleFullScreenClick() {\r\n    if (this.state.isfullscreen) {\r\n      this.setState({ isfullscreen: false });\r\n      this.props.normalize(\"#cmd\");\r\n    } else {\r\n      this.props.maximize(\"#cmd\");\r\n      this.setState({ isfullscreen: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var maximizeBtn = this.state.isfullscreen ? \"❐\" : \"☐\";\r\n    return (\r\n      <Rnd\r\n        id=\"cmd\"\r\n        minHeight=\"100\"\r\n        minWidth=\"300\"\r\n        onMouseDown={() => this.props.active(\".cmd-exe\")}\r\n        default={{\r\n          x: 25,\r\n          y: 66,\r\n          width: 600,\r\n          height: 400,\r\n        }}\r\n        cancel=\".not-draggable\"\r\n      >\r\n\r\n        < div className={!this.state.isfullscreen ? \"toolbar\" : \"toolbar not-draggable\"} >\r\n          <div className=\"toolbar-title\">\r\n            <span className=\"toolbar-icon\">▇</span>\r\n            <span>Command Prompt</span>\r\n          </div>\r\n          <div className=\"toolbar-btn-collection not-draggable\">\r\n            <button\r\n              className=\"toolbar-btn minimize-btn\"\r\n              onClick={() => this.props.minimize(\".cmd-exe\")}\r\n            >\r\n              &#8213;\r\n               </button>\r\n            <button\r\n              className=\"toolbar-btn maximize-btn\"\r\n              onClick={this.handleFullScreenClick}\r\n            >\r\n              {maximizeBtn}\r\n            </button>\r\n            <button\r\n              className=\"toolbar-btn close-btn\"\r\n              onClick={() => this.props.exit(\".cmd-exe\")}\r\n            >\r\n              &#10005;\r\n               </button>\r\n          </div>\r\n        </div >\r\n        <div className=\"cmd-text-window not-draggable\">\r\n          <span>\r\n            Microsoft Windows [Version 10.0.016729.1087]<br></br>\r\n            (c)2017 Microsoft Corporation. All rights reserved.\r\n               <br></br>\r\n            <br></br>\r\n            C:\\Users\\Guest\r\n             </span>\r\n        </div>\r\n\r\n\r\n\r\n      </Rnd >\r\n      // <Draggable\r\n      //   handle=\".toolbar-title\"\r\n      //   disabled={this.state.isfullscreen}\r\n      //   onStart={() => this.props.active(\".cmd-exe\")}\r\n      // >\r\n\r\n      //   <div id=\"cmd\" onClick={() => this.props.active(\".cmd-exe\")}>\r\n      //     <div className=\"toolbar\">\r\n      //       <div className=\"toolbar-title\">\r\n      //         <span className=\"toolbar-icon\">▇</span>\r\n      //         <span>Command Prompt</span>\r\n      //       </div>\r\n      //       <div className=\"toolbar-btn-collection\">\r\n      //         <button\r\n      //           className=\"toolbar-btn minimize-btn\"\r\n      //           onClick={() => this.props.minimize(\".cmd-exe\")}\r\n      //         >\r\n      //           &#8213;\r\n      //         </button>\r\n      //         <button\r\n      //           className=\"toolbar-btn maximize-btn\"\r\n      //           onClick={this.handleFullScreenClick}\r\n      //         >\r\n      //           {maximizeBtn}\r\n      //         </button>\r\n      //         <button\r\n      //           className=\"toolbar-btn close-btn\"\r\n      //           onClick={() => this.props.exit(\".cmd-exe\")}\r\n      //         >\r\n      //           &#10005;\r\n      //         </button>\r\n      //       </div>\r\n      //     </div>\r\n      //     <div className=\"cmd-text-window\">\r\n      //       <span>\r\n      //         Microsoft Windows [Version 10.0.016729.1087]<br></br>\r\n      //         (c)2017 Microsoft Corporation. All rights reserved.\r\n      //         <br></br>\r\n      //         <br></br>\r\n      //         C:\\Users\\Guest\r\n      //       </span>\r\n      //     </div>\r\n      //   </div>\r\n      // </Draggable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cmd;\r\n","import React from \"react\";\r\nimport \"./Notepad.css\";\r\nimport { Rnd } from \"react-rnd\";\r\nclass Notepad extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleFullScreenClick = this.handleFullScreenClick.bind(this);\r\n    this.state = { isfullscreen: false };\r\n  }\r\n\r\n  handleFullScreenClick() {\r\n    console.log(this.state.isfullscreen);\r\n    if (this.state.isfullscreen) {\r\n      this.setState({ isfullscreen: false });\r\n      this.props.normalize(\"#notepad\");\r\n    } else {\r\n      this.props.maximize(\"#notepad\");\r\n      this.setState({ isfullscreen: true });\r\n    }\r\n  }\r\n\r\n  stateChange = state => {\r\n    this.props.stateChange(state);\r\n  };\r\n\r\n  render() {\r\n    var maximizeBtn = this.state.isfullscreen ? \"❐\" : \"☐\";\r\n    return (\r\n      <Rnd\r\n        id=\"notepad\"\r\n        minHeight=\"100\"\r\n        minWidth=\"300\"\r\n        onMouseDown={() => this.props.active(\".notepad-exe\")}\r\n        default={{\r\n          x: 65,\r\n          y: 116,\r\n          width: 600,\r\n          height: 400,\r\n        }}\r\n        cancel=\".not-draggable\"\r\n      >\r\n        < div className={!this.state.isfullscreen ? \"notepad-toolbar\" : \"notepad-toolbar not-draggable\"} >\r\n          <div className=\"toolbar-title\">\r\n            <span className=\"toolbar-icon\">▇</span>\r\n            <span>Personal information.txt</span>\r\n          </div>\r\n          <div className=\"toolbar-btn-collection not-draggable\">\r\n            <button\r\n              className=\"notepad-toolbar-btn minimize-btn\"\r\n              onClick={() => this.props.minimize(\".notepad-exe\")}\r\n            >\r\n              &#8213;\r\n              </button>\r\n            <button\r\n              className=\"notepad-toolbar-btn maximize-btn\"\r\n              onClick={this.handleFullScreenClick}\r\n            >\r\n              {maximizeBtn}\r\n            </button>\r\n            <button\r\n              className=\"notepad-toolbar-btn close-btn\"\r\n              onClick={() => this.props.exit(\".notepad-exe\")}\r\n            >\r\n              &#10005;\r\n              </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"toolbar-btn-row not-draggable\">\r\n          <span>File</span>\r\n          <span>Edit</span>\r\n          <span>Format</span>\r\n          <span>View</span>\r\n          <span>Help</span>\r\n        </div>\r\n        <div className=\"notepad-text-window not-draggable\">\r\n          <span>\r\n            My name is Per \"the sär\" Nilsson<br></br>I live in the Sundsvall\r\n            AKA \"The northern darkness\" AKA \"A regular town in Sweden\".\r\n              <br></br>\r\n            <br></br>\r\n            My life philosophy is to do as little as possible and devouring as\r\n            many things as i can.\r\n            </span>\r\n        </div>\r\n\r\n      </Rnd>\r\n      // <Draggable\r\n      //   handle=\".toolbar-title\"\r\n      //   disabled={this.state.isfullscreen}\r\n      //   onStart={() => this.props.active(\".notepad-exe\")}\r\n      // >\r\n      //   <div id=\"notepad\" onClick={() => this.props.active(\".notepad-exe\")}>\r\n      //     <div className=\"notepad-toolbar\">\r\n      //       <div className=\"toolbar-title\">\r\n      //         <span className=\"toolbar-icon\">▇</span>\r\n      //         <span>Personal information.txt</span>\r\n      //       </div>\r\n      //       <div className=\"toolbar-btn-collection\">\r\n      //         <button\r\n      //           className=\"notepad-toolbar-btn minimize-btn\"\r\n      //           onClick={() => this.props.minimize(\".notepad-exe\")}\r\n      //         >\r\n      //           &#8213;\r\n      //         </button>\r\n      //         <button\r\n      //           className=\"notepad-toolbar-btn maximize-btn\"\r\n      //           onClick={this.handleFullScreenClick}\r\n      //         >\r\n      //           {maximizeBtn}\r\n      //         </button>\r\n      //         <button\r\n      //           className=\"notepad-toolbar-btn close-btn\"\r\n      //           onClick={() => this.props.exit(\".notepad-exe\")}\r\n      //         >\r\n      //           &#10005;\r\n      //         </button>\r\n      //       </div>\r\n      //     </div>\r\n      //     <div className=\"toolbar-btn-row\">\r\n      //       <span>File</span>\r\n      //       <span>Edit</span>\r\n      //       <span>Format</span>\r\n      //       <span>View</span>\r\n      //       <span>Help</span>\r\n      //     </div>\r\n      //     <div className=\"notepad-text-window\">\r\n      //       <span>\r\n      //         My name is Per \"the sär\" Nilsson<br></br>I live in the Sundsvall\r\n      //         AKA \"The northern darkness\" AKA \"A regular town in Sweden\".\r\n      //         <br></br>\r\n      //         <br></br>\r\n      //         My life philosophy is to do as little as possible and devouring as\r\n      //         many things as i can.\r\n      //       </span>\r\n      //     </div>\r\n      //   </div>\r\n      // </Draggable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notepad;\r\n","import React from \"react\";\r\nimport \"./Taskbar.css\";\r\n\r\nclass Taskbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeProgram: \"\",\r\n      clock: \"\"\r\n    };\r\n    //this.getClockTime();\r\n    //this.getClockTime = this.getClockTime.bind(this);\r\n\r\n  }\r\n  componentDidMount = () => {\r\n    this.getClockTime();\r\n    var intervalId = setInterval(() => {\r\n      this.getClockTime();\r\n    }, 1000);\r\n\r\n    this.setState({ intervalId: intervalId });\r\n  }\r\n  componentWillUnmount = () => {\r\n    clearInterval(this.state.intervalId);\r\n  }\r\n  setActive = program => {\r\n    this.setState({ activeProgram: program });\r\n  };\r\n  getClockTime = () => {\r\n    this.setState({ clock: new Date().toTimeString().slice(0, 5) });\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div id=\"taskbar\" className=\"taskbar\">\r\n        <button className=\"taskbar-startmenu-btn\">\r\n          <svg viewBox=\"0 0 48 48\">\r\n            <path fill=\"#ffffff\" d=\"M20 25.026L5.011 25 5.012 37.744 20 39.818zM22 25.03L22 40.095 42.995 43 43 25.066zM20 8.256L5 10.38 5.014 23 20 23zM22 7.973L22 23 42.995 23 42.995 5z\"\r\n            /></svg>\r\n          {/* <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 88 88\">\r\n            <path\r\n              d=\"m0 12.402 35.687-4.8602.0156 34.423-35.67.20313zm35.67 33.529.0277 34.453-35.67-4.9041-.002-29.78zm4.3261-39.025 47.318-6.906v41.527l-47.318.37565zm47.329 39.349-.0111 41.34-47.318-6.6784-.0663-34.739z\"\r\n              fill=\"#ffffff\"\r\n            />\r\n          </svg> */}\r\n        </button>\r\n        <button className=\"taskbar-search-btn\">\r\n          <svg viewBox=\"0 0 16 16\" version=\"1.1\">\r\n            <path fill=\"#ffffff\" d=\"M 10.5 1 C 8.019531 1 6 3.019531 6 5.5 C 6 6.558594 6.382813 7.523438 7 8.292969 L 2.023438 13.269531 L 2.726563 13.980469 L 7.707031 9 C 8.476563 9.617188 9.441406 10 10.5 10 C 12.980469 10 15 7.980469 15 5.5 C 15 3.019531 12.980469 1 10.5 1 Z M 10.5 2 C 12.4375 2 14 3.5625 14 5.5 C 14 7.4375 12.4375 9 10.5 9 C 8.5625 9 7 7.4375 7 5.5 C 7 3.5625 8.5625 2 10.5 2 Z \" />\r\n          </svg>\r\n        </button>\r\n        <div className=\"taskbar-active-programs\">\r\n          {this.props.OpenPrograms.map(program => (\r\n            <div\r\n              className={\r\n                \"task-\" +\r\n                program +\r\n                \" \" +\r\n                (this.state.activeProgram === program ? \"active\" : \"inactive\")\r\n              }\r\n              key={program}\r\n              onClick={() => this.props.taskbarItemClicked(program)}\r\n            >\r\n              <div>\r\n                <div>\r\n                  <span>Ico {this.props.ActiveProgram} </span>\r\n                  <span>{program}</span>\r\n                </div>\r\n\r\n              </div>\r\n              <div className=\"bottom-border\"></div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"taskbar-clock\">\r\n          <span>{this.state.clock}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Taskbar;\r\n","import React from \"react\";\r\nimport \"./Browser.css\";\r\nimport { Rnd } from \"react-rnd\";\r\nimport browserIco from \"../../../images/shell32_264.ico\";\r\nimport browserPropertiesIco from \"../../../images/imageres_5367.ico\";\r\nimport chromeIcon from \"../../../images/Chrome-icon.png\";\r\nimport moreSettings from \"../../../images/more-settings.svg\";\r\n// import snake3d from \"../../../documents/index.html\";\r\nimport starFavourite from \"../../../images/star-favourite.png\";\r\n// const snake3d = require(\"../../../documents/3d.html\");\r\n\r\nclass Browser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: \"\",\r\n      minWidth: 600,\r\n      minHeight: 400,\r\n      x: 710,\r\n      y: 10,\r\n      isfullscreen: false,\r\n      listOfOpenWebsites: []\r\n    };\r\n    this.listOfWebsites = [\r\n      { name: \"DirtyMiniatures\", url: \"http://dirtyminiatures.com/\" },\r\n      { name: \"Snake3d\", url: \"http://google.com/\" }\r\n    ];\r\n    //this.listOfOpenWebsites = [];\r\n    this.handleFullScreenClick = this.handleFullScreenClick.bind(this);\r\n    this.closeTab = this.closeTab.bind(this);\r\n  }\r\n  handleFullScreenClick() {\r\n    if (this.state.isfullscreen) {\r\n      this.setState({ isfullscreen: false });\r\n      this.props.normalize(\"#browser\");\r\n    } else {\r\n      this.props.maximize(\"#browser\");\r\n      this.setState({ isfullscreen: true });\r\n    }\r\n  }\r\n\r\n  setbrowserIconActive(name) {\r\n    this.setState({\r\n      snake3dActive: false,\r\n      dirtyminiaturesActive: false\r\n    });\r\n    if (name === \"dirtyminiatures\") {\r\n      this.setState({ dirtyminiaturesActive: true });\r\n    } else if (name === \"snake3d\") {\r\n      this.setState({ snake3dActive: true });\r\n    }\r\n  }\r\n\r\n  openNewPage(openedPage) {\r\n    for (let page of this.listOfWebsites) {\r\n      if (page.name.toLowerCase() === openedPage.toLowerCase()) {\r\n        if (\r\n          !this.state.listOfOpenWebsites.some(\r\n            x => x[\"name\"].toLowerCase() === openedPage.toLowerCase()\r\n          )\r\n        ) {\r\n          this.state.listOfOpenWebsites.push(page);\r\n        } else {\r\n        }\r\n        this.setState({ activeTab: page.name });\r\n      }\r\n    }\r\n  }\r\n  closeTab = pageName => {\r\n    if (this.state.listOfOpenWebsites.length < 2) {\r\n      this.props.exit(\".browser-exe\");\r\n    } else {\r\n      var remainingTabs = this.state.listOfOpenWebsites.filter(\r\n        x => x.name != pageName\r\n      );\r\n      var newName = remainingTabs[0].name;\r\n      this.setState(\r\n        {\r\n          activeTab: newName + \"\",\r\n          listOfOpenWebsites: remainingTabs\r\n        },\r\n        () => {\r\n          console.log(\"tabs: \", this.state);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    var maximizeBtn = this.state.isfullscreen ? \"❐\" : \"☐\";\r\n    var iframeUrl = \"\";\r\n    var active = this.state.activeTab;\r\n    switch (this.state.activeTab.toLowerCase()) {\r\n      case \"dirtyminiatures\":\r\n        iframeUrl = \"http://dirtyminiatures.com/\";\r\n        break;\r\n      case \"snake3d\":\r\n        iframeUrl = \"https://sogetivisitorclient.z6.web.core.windows.net/\";\r\n        break;\r\n      default:\r\n    }\r\n    return (\r\n      <Rnd\r\n        id=\"browser\"\r\n        minHeight=\"100\"\r\n        minWidth=\"580\"\r\n        onMouseDown={() => this.props.active(\".browser-exe\")}\r\n        default={{\r\n          x: 215,\r\n          y: 26,\r\n          width: 1100,\r\n          height: 700\r\n        }}\r\n        cancel=\".not-draggable\"\r\n      >\r\n        <div\r\n          className={\r\n            !this.state.isfullscreen\r\n              ? \"browser-toolbar\"\r\n              : \"browser-toolbar not-draggable\"\r\n          }\r\n        >\r\n          <div className=\"browser-toolbar-tabs\">\r\n            {this.state.listOfOpenWebsites.map(program => (\r\n              <div\r\n                key={program.name}\r\n                className={active === program.name ? \"active-tab\" : \"\"}\r\n                onClick={event => {\r\n                  event.stopPropagation();\r\n                  this.openNewPage(program.name);\r\n                }}\r\n              >\r\n                <span>{program.name}</span>\r\n                <span\r\n                  onClick={event => {\r\n                    event.stopPropagation();\r\n                    this.closeTab(program.name);\r\n                  }}\r\n                >\r\n                  &#10005;\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"toolbar-btn-collection not-draggable\">\r\n            <button\r\n              className=\"browser-toolbar-btn minimize-btn\"\r\n              onClick={() => this.props.minimize(\".browser-exe\")}\r\n            >\r\n              &#8213;\r\n            </button>\r\n            <button\r\n              className=\"browser-toolbar-btn maximize-btn\"\r\n              onClick={this.handleFullScreenClick}\r\n            >\r\n              {maximizeBtn}\r\n            </button>\r\n            <button\r\n              className=\"browser-toolbar-btn close-btn\"\r\n              onClick={() => this.props.exit(\".browser-exe\")}\r\n            >\r\n              &#10005;\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"browser-navigation-bar  not-draggable\">\r\n          <div className=\"browser-arrow-btn-container\">\r\n            <div>\r\n              <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                viewBox=\"0 0 492 492\"\r\n              >\r\n                <g>\r\n                  <g>\r\n                    <path d=\"M464.344,207.418l0.768,0.168H135.888l103.496-103.724c5.068-5.064,7.848-11.924,7.848-19.124    c0-7.2-2.78-14.012-7.848-19.088L223.28,49.538c-5.064-5.064-11.812-7.864-19.008-7.864c-7.2,0-13.952,2.78-19.016,7.844    L7.844,226.914C2.76,231.998-0.02,238.77,0,245.974c-0.02,7.244,2.76,14.02,7.844,19.096l177.412,177.412    c5.064,5.06,11.812,7.844,19.016,7.844c7.196,0,13.944-2.788,19.008-7.844l16.104-16.112c5.068-5.056,7.848-11.808,7.848-19.008    c0-7.196-2.78-13.592-7.848-18.652L134.72,284.406h329.992c14.828,0,27.288-12.78,27.288-27.6v-22.788    C492,219.198,479.172,207.418,464.344,207.418z\" />\r\n                  </g>\r\n                </g>\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                viewBox=\"0 0 492.004 492.004\"\r\n              >\r\n                <g>\r\n                  <g>\r\n                    <path d=\"M484.14,226.886L306.46,49.202c-5.072-5.072-11.832-7.856-19.04-7.856c-7.216,0-13.972,2.788-19.044,7.856l-16.132,16.136    c-5.068,5.064-7.86,11.828-7.86,19.04c0,7.208,2.792,14.2,7.86,19.264L355.9,207.526H26.58C11.732,207.526,0,219.15,0,234.002    v22.812c0,14.852,11.732,27.648,26.58,27.648h330.496L252.248,388.926c-5.068,5.072-7.86,11.652-7.86,18.864    c0,7.204,2.792,13.88,7.86,18.948l16.132,16.084c5.072,5.072,11.828,7.836,19.044,7.836c7.208,0,13.968-2.8,19.04-7.872    l177.68-177.68c5.084-5.088,7.88-11.88,7.86-19.1C492.02,238.762,489.228,231.966,484.14,226.886z\" />\r\n                  </g>\r\n                </g>\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <svg viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                <path d=\"M 20 12 C 20 16.417969 16.417969 20 12 20 C 7.582031 20 4 16.417969 4 12 C 4 7.582031 7.582031 4 12 4 C 13.113281 4 14.167969 4.238281 15.132813 4.648438 L 12.628906 7.324219 L 20.121094 7.074219 L 19.484375 0 L 17.273438 2.359375 C 15.710938 1.5 13.914063 1 12 1 C 5.925781 1 1 5.925781 1 12 C 1 18.074219 5.925781 23 12 23 C 18.074219 23 23 18.074219 23 12 Z \"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div className=\"browser-url-area\">\r\n            <div>\r\n              <div className=\"browser-url-area-text\">\r\n                <div>\r\n                  <img src={browserIco}></img>\r\n                </div>\r\n                <div>{iframeUrl}</div>\r\n              </div>\r\n              <div className=\"browser-url-area-favourite\">\r\n                <img src={starFavourite}></img>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"browser-toolbar-user-icons\">\r\n            <span className=\"user-icon\">\r\n              <div>?</div>\r\n            </span>\r\n            <span className=\"more-settings-icon\">\r\n              <img src={moreSettings}></img>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"browser-display-area\">\r\n          <iframe src={iframeUrl} title=\"browser\" />\r\n          {/* <iframe src={snake3d} /> */}\r\n        </div>\r\n      </Rnd>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Browser;\r\n","import React from \"../../../../node_modules/react\";\r\nimport \"./Start-modal.css\";\r\n\r\nclass StartModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      clicked: false\r\n    };\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({\r\n      clicked: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"modal-wrapper\"\r\n        className={this.state.clicked ? \"modal-remove\" : \"\"}\r\n      >\r\n        <div id=\"modal\">\r\n          <div>Press F11 to enter fullscreen for the best user experience</div>\r\n          <div>\r\n            <button onClick={this.closeModal}>Got it</button>\r\n          </div>\r\n        </div>\r\n        <div id=\"modal-trail\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartModal;\r\n","import React from \"react\";\r\nimport \"./Windows.css\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport folderIcon from \"../images/shell32_264.ico\";\r\nimport Folder from \"./programs/Folder/Folder\";\r\nimport Cmd from \"./programs/Cmd/Cmd\";\r\nimport Notepad from \"./programs/Notepad/Notepad\";\r\nimport cmdIcon from \"./../images/cmd-icon.ico\";\r\nimport noteIcon from \"./../images/note-icon.ico\";\r\nimport Taskbar from \"./general-components/taskbar/Taskbar\";\r\nimport Browser from \"./programs/Browser/Browser\";\r\nimport StartModal from \"./general-components/start-modal/Start-modal\";\r\n\r\nimport { NONAME, resolve } from \"dns\";\r\n\r\nclass Windows extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      OpenPrograms: [],\r\n      ActiveProgram: \"\",\r\n      cmdActive: false,\r\n      cmdFullScreen: false,\r\n      biosClick: false\r\n    };\r\n\r\n    this.listOfProgramCoords = [\r\n      { name: \".cmd-exe\", x: \"0\", y: \"0\" },\r\n      { name: \".notepad-exe\", x: \"0\", y: \"0\" },\r\n      { name: \".folder-exe\", x: \"0\", y: \"0\" },\r\n      { name: \".browser-exe\", x: \"0\", y: \"0\" }\r\n    ];\r\n    this.taskbar = React.createRef();\r\n    this.browser = React.createRef();\r\n\r\n    this.openAppFromIcon = this.openAppFromIcon.bind(this);\r\n    this.closeAppFromToolbar = this.closeAppFromToolbar.bind(this);\r\n    this.minimizeAppFromToolbar = this.minimizeAppFromToolbar.bind(this);\r\n    this.render = this.render.bind(this);\r\n    this.clicks = [];\r\n    this.timeout = null;\r\n    //this.currentlyShowingCallback = this.currentlyShowingCallback.bind(this);\r\n  }\r\n  openAppFromIcon = program => {\r\n    const node = ReactDOM.findDOMNode(this);\r\n    let programNode = node.querySelector(program);\r\n    let window = programNode.querySelector(\":scope > div\");\r\n\r\n    if (programNode.style.display !== \"block\") {\r\n      programNode.style.display = \"block\";\r\n      let list = this.state.OpenPrograms;\r\n      list.push(program);\r\n      this.setState({ OpenPrograms: list });\r\n      this.setActiveWindow(program);\r\n    } else {\r\n      if (window.style.opacity === 0) {\r\n        console.log(\"opac\")\r\n        this.openAppFromTaskbar(program);\r\n      }\r\n      else {\r\n        this.setActiveWindow(program)\r\n      }\r\n    }\r\n  };\r\n  openAppFromTaskbar = program => {\r\n    const node = ReactDOM.findDOMNode(this);\r\n    let programNode = node.querySelector(program);\r\n    let window = programNode.querySelector(\":scope > div\");\r\n\r\n    if (window.style.opacity === \"0\") {\r\n      let taskbarNodes = node.querySelectorAll(\r\n        \".taskbar-active-programs > div\"\r\n      );\r\n\r\n      for (let node of taskbarNodes) {\r\n        if (node.classList.contains(\"task-\" + program)) {\r\n          let coordsItem = this.getCoords(program);\r\n          window.style.display = \"flex\";\r\n\r\n          function animate() {\r\n            return new Promise((resolve, reject) => {\r\n              window.style.transform =\r\n                \"translate(\" +\r\n                coordsItem.x +\r\n                \"px ,\" +\r\n                coordsItem.y +\r\n                \"px ) scale(1)\";\r\n              window.style.opacity = \"1\";\r\n              setTimeout(() => {\r\n                resolve(true);\r\n              }, 300);\r\n            });\r\n          }\r\n          setTimeout(\r\n            function () {\r\n              animate().then(x => {\r\n                window.style.transition = \"none\";\r\n              });\r\n            }.bind(this),\r\n            1\r\n          );\r\n\r\n          // setTimeout(() => {\r\n          //   animate().then(x => {\r\n          //     window.style.transition = \"none\";\r\n          //     console.log(window.style.transition)\r\n          //   })\r\n          // }, 1);\r\n        }\r\n      }\r\n\r\n      this.setActiveWindow(program);\r\n    } else {\r\n      this.setActiveWindow(program);\r\n      this.minimizeAppFromToolbar(program);\r\n    }\r\n  };\r\n\r\n  closeAppFromToolbar = program => {\r\n    const node = ReactDOM.findDOMNode(this);\r\n    let programNode = node.querySelector(program);\r\n    programNode.style.display = \"none\";\r\n    let list = this.state.OpenPrograms;\r\n    let idx = list.indexOf(program);\r\n    list.splice(idx, 1);\r\n    this.setState({ OpenPrograms: list });\r\n  };\r\n  minimizeAppFromToolbar = program => {\r\n    const node = ReactDOM.findDOMNode(this);\r\n    let programNode = node.querySelector(program);\r\n    let window = programNode.querySelector(\":scope > div\");\r\n    let taskbarNodes = node.querySelectorAll(\".taskbar-active-programs > div\");\r\n    for (let node of taskbarNodes) {\r\n      if (node.classList.contains(\"task-\" + program)) {\r\n        let taskbarCoords = node.getBoundingClientRect();\r\n        let programwindow = window.getBoundingClientRect();\r\n\r\n        var currentTransformFromDraggable = window.style.transform.match(\r\n          /[+-]?\\d+(?:\\.\\d+)?/g\r\n        );\r\n\r\n        let draggableY = 0;\r\n        let draggableX = 0;\r\n\r\n        if (currentTransformFromDraggable) {\r\n          draggableX = currentTransformFromDraggable[0];\r\n          draggableY = currentTransformFromDraggable[1];\r\n\r\n          this.setCoords(program, draggableX, draggableY);\r\n        }\r\n        // console.log(          taskbarCoords.x + \" \" + programwindow.x + \" \" + programwindow.width / 4        );\r\n\r\n        let destinationY =\r\n          taskbarCoords.y - programwindow.y - programwindow.height;\r\n        let destinationX =\r\n          taskbarCoords.x - 100 - programwindow.x + parseInt(draggableX);\r\n\r\n        if (destinationY < programwindow.height) {\r\n          destinationY = taskbarCoords.y - programwindow.height;\r\n        }\r\n\r\n        window.style.transition =\r\n          \"transform 0.3s ease-in-out, opacity 0.2s ease-in-out\";\r\n        window.style.transform =\r\n          \"translate(\" +\r\n          destinationX +\r\n          \"px ,\" +\r\n          destinationY +\r\n          \"px ) scale(0.5)\";\r\n\r\n        window.style.opacity = \"0\";\r\n        setTimeout(() => {\r\n          window.style.display = \"none\";\r\n        }, 300);\r\n      }\r\n    }\r\n  };\r\n  maximizeAppFromToolbar = program => {\r\n    const node = ReactDOM.findDOMNode(this);\r\n    let programNode = node.querySelector(program);\r\n    programNode.classList.add(\"program-fullscreen\");\r\n  };\r\n  undoMaximizeAppFromToolbar = program => {\r\n    const node = ReactDOM.findDOMNode(this);\r\n    let programNode = node.querySelector(program);\r\n    programNode.classList.remove(\"program-fullscreen\");\r\n  };\r\n  setActiveWindow = program => {\r\n    const node = ReactDOM.findDOMNode(this);\r\n\r\n    let programNode = node.querySelector(program);\r\n    if (!programNode.classList.contains(\"program-window-front\")) {\r\n      let AllPrograms = node.querySelectorAll(\".program\");\r\n      for (let prog of AllPrograms) {\r\n        prog.classList.remove(\"program-window-front\");\r\n        prog.classList.add(\"program-window-back\");\r\n      }\r\n      programNode.classList.remove(\"program-window-back\");\r\n      programNode.classList.add(\"program-window-front\");\r\n    }\r\n\r\n    this.taskbar.current.setActive(program);\r\n  };\r\n  openApp = e => {\r\n    this.openAppFromIcon(e);\r\n    this.taskbar.current.setActive(e);\r\n  };\r\n  getCoords(program) {\r\n    return this.listOfProgramCoords.find(x => x.name === program);\r\n  }\r\n  setCoords(program, x, y) {\r\n    var foundIndex = this.listOfProgramCoords.findIndex(\r\n      x => x.name === program\r\n    );\r\n\r\n    this.listOfProgramCoords[foundIndex].y = y;\r\n    this.listOfProgramCoords[foundIndex].x = x;\r\n  }\r\n\r\n  //Single or Double click navigator\r\n  clickHandler(state, e) {\r\n    e.persist();\r\n    e.preventDefault();\r\n    this.clicks.push(new Date().getTime());\r\n    window.clearTimeout(this.timeout);\r\n    this.timeout = window.setTimeout(() => {\r\n      if (\r\n        this.clicks.length > 1 &&\r\n        this.clicks[this.clicks.length - 1] -\r\n        this.clicks[this.clicks.length - 2] <\r\n        200\r\n      ) {\r\n        this.openApp(state);\r\n      }\r\n    }, 250);\r\n  }\r\n  openShortcut = (shortcut) => {\r\n    this.browser.current.openNewPage(shortcut)\r\n    this.openApp(\".browser-exe\");\r\n    this.taskbar.current.setActive(\".browser-exe\");\r\n  }\r\n  render() {\r\n    //this.props.stateChange(state)\r\n\r\n    return (\r\n      <div id=\"Menu-page\" className=\"module-page\">\r\n        <StartModal></StartModal>\r\n        <div className=\"Menu-buttons\">\r\n          <div\r\n            id=\"cmd-btn\"\r\n            className={this.state.cmdActive ? \"preview-full\" : null}\r\n            onClick={e => this.clickHandler(\".cmd-exe\", e)}\r\n            tabIndex=\"0\"\r\n          >\r\n            <div>\r\n              <img src={cmdIcon}></img>\r\n            </div>\r\n            <div>Run skills batch job</div>\r\n          </div>\r\n\r\n          <div\r\n            id=\"notepad-btn\"\r\n            tabIndex=\"1\"\r\n            onClick={e => this.clickHandler(\".notepad-exe\", e)}\r\n          >\r\n            <div>\r\n              <img src={noteIcon}></img>\r\n            </div>\r\n            <div>Per Nilsson bio</div>\r\n          </div>\r\n\r\n          <div\r\n            id=\"folder-btn\"\r\n            tabIndex=\"1\"\r\n            onClick={e => this.clickHandler(\".folder-exe\", e)}\r\n          >\r\n            <div>\r\n              <img src={folderIcon}></img>\r\n            </div>\r\n            <div>Projects</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"program cmd-exe\">\r\n          <Cmd\r\n            exit={this.closeAppFromToolbar}\r\n            maximize={this.maximizeAppFromToolbar}\r\n            normalize={this.undoMaximizeAppFromToolbar}\r\n            minimize={this.minimizeAppFromToolbar}\r\n            active={this.setActiveWindow}\r\n          ></Cmd>\r\n        </div>\r\n        <div className=\"program notepad-exe\">\r\n          <Notepad\r\n            exit={this.closeAppFromToolbar}\r\n            maximize={this.maximizeAppFromToolbar}\r\n            normalize={this.undoMaximizeAppFromToolbar}\r\n            minimize={this.minimizeAppFromToolbar}\r\n            active={this.setActiveWindow}\r\n          ></Notepad>\r\n        </div>\r\n        <div className=\"program folder-exe\">\r\n          <Folder\r\n            exit={this.closeAppFromToolbar}\r\n            maximize={this.maximizeAppFromToolbar}\r\n            normalize={this.undoMaximizeAppFromToolbar}\r\n            minimize={this.minimizeAppFromToolbar}\r\n            active={this.setActiveWindow}\r\n            shortcutOpened={this.openShortcut}\r\n          ></Folder>\r\n        </div>\r\n        <div className=\"program browser-exe\">\r\n          <Browser\r\n            ref={this.browser}\r\n            exit={this.closeAppFromToolbar}\r\n            maximize={this.maximizeAppFromToolbar}\r\n            normalize={this.undoMaximizeAppFromToolbar}\r\n            minimize={this.minimizeAppFromToolbar}\r\n            active={this.setActiveWindow}\r\n          ></Browser>\r\n        </div>\r\n        {/* <iframe src=\"http://dirtyminiatures.com/\" height=\"500\" width=\"500\" /> */}\r\n        <Taskbar\r\n          ref={this.taskbar}\r\n          OpenPrograms={this.state.OpenPrograms}\r\n          taskbarItemClicked={this.openAppFromTaskbar}\r\n        ></Taskbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Windows;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Windows from \"./components/Windows\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<Windows />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}